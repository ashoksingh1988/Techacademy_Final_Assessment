name: Master Automation CI/CD Pipeline
# Author: Asim Kumar Singh
# Purpose: Execute all automation frameworks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 1 * * *'  # Daily at 1 AM UTC
  workflow_dispatch:
    inputs:
      execution_mode:
        description: 'Execution mode'
        required: true
        default: 'parallel'
        type: choice
        options:
          - parallel
          - sequential
      run_java_selenium:
        description: 'Run Java Selenium Framework'
        required: true
        default: true
        type: boolean
      run_java_appium:
        description: 'Run Java Appium Framework'
        required: true
        default: true
        type: boolean
      run_python_selenium:
        description: 'Run Python Selenium Framework'
        required: true
        default: true
        type: boolean
      test_suite:
        description: 'Test suite to execute'
        required: true
        default: 'smoke'
        type: choice
        options:
          - smoke
          - regression
          - full
      environment:
        description: 'Target environment'
        required: true
        default: 'qa'
        type: choice
        options:
          - qa
          - staging
          - production

env:
  JAVA_VERSION: '11'
  PYTHON_VERSION: '3.9'
  NODE_VERSION: '18'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      run-java-selenium: ${{ steps.config.outputs.run-java-selenium }}
      run-java-appium: ${{ steps.config.outputs.run-java-appium }}
      run-python-selenium: ${{ steps.config.outputs.run-python-selenium }}
      test-suite: ${{ steps.config.outputs.test-suite }}
      environment: ${{ steps.config.outputs.environment }}
    steps:
    - name: Configure execution
      id: config
      run: |
        echo "run-java-selenium=${{ github.event.inputs.run_java_selenium || 'true' }}" >> $GITHUB_OUTPUT
        echo "run-java-appium=${{ github.event.inputs.run_java_appium || 'true' }}" >> $GITHUB_OUTPUT
        echo "run-python-selenium=${{ github.event.inputs.run_python_selenium || 'true' }}" >> $GITHUB_OUTPUT
        echo "test-suite=${{ github.event.inputs.test_suite || 'smoke' }}" >> $GITHUB_OUTPUT
        echo "environment=${{ github.event.inputs.environment || 'qa' }}" >> $GITHUB_OUTPUT

  # PARALLEL EXECUTION
  parallel-execution:
    if: github.event.inputs.execution_mode == 'parallel' || github.event.inputs.execution_mode == ''
    needs: setup
    strategy:
      matrix:
        framework: [java-selenium, java-appium, python-selenium]
      fail-fast: false
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      
    - name: Java Selenium Framework
      if: matrix.framework == 'java-selenium' && needs.setup.outputs.run-java-selenium == 'true'
      uses: ./.github/workflows/selenium-automation.yml
      with:
        test_suite: ${{ needs.setup.outputs.test-suite }}
        environment: ${{ needs.setup.outputs.environment }}
        
    - name: Java Appium Framework
      if: matrix.framework == 'java-appium' && needs.setup.outputs.run-java-appium == 'true'
      uses: ./.github/workflows/mobile-automation.yml
      with:
        test_suite: ${{ needs.setup.outputs.test-suite }}
        
    - name: Python Selenium Framework
      if: matrix.framework == 'python-selenium' && needs.setup.outputs.run-python-selenium == 'true'
      uses: ./.github/workflows/python-automation.yml
      with:
        test_suite: ${{ needs.setup.outputs.test-suite }}
        environment: ${{ needs.setup.outputs.environment }}

  # SEQUENTIAL EXECUTION
  java-selenium-sequential:
    if: github.event.inputs.execution_mode == 'sequential' && needs.setup.outputs.run-java-selenium == 'true'
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - name: Execute Java Selenium
      uses: ./.github/workflows/selenium-automation.yml
      with:
        test_suite: ${{ needs.setup.outputs.test-suite }}
        environment: ${{ needs.setup.outputs.environment }}

  java-appium-sequential:
    if: github.event.inputs.execution_mode == 'sequential' && needs.setup.outputs.run-java-appium == 'true'
    needs: [setup, java-selenium-sequential]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - name: Execute Java Appium
      uses: ./.github/workflows/mobile-automation.yml
      with:
        test_suite: ${{ needs.setup.outputs.test-suite }}

  python-selenium-sequential:
    if: github.event.inputs.execution_mode == 'sequential' && needs.setup.outputs.run-python-selenium == 'true'
    needs: [setup, java-appium-sequential]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - name: Execute Python Selenium
      uses: ./.github/workflows/python-automation.yml
      with:
        test_suite: ${{ needs.setup.outputs.test-suite }}
        environment: ${{ needs.setup.outputs.environment }}

  consolidate-reports:
    needs: [parallel-execution, python-selenium-sequential]
    if: always()
    runs-on: ubuntu-latest
    
    steps:
    - name: Download All Artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./all-reports
        
    - name: Consolidate Reports
      run: |
        mkdir -p consolidated-reports
        
        # Copy all framework reports
        cp -r all-reports/* consolidated-reports/ || true
        
        # Generate master summary
        cat > consolidated-reports/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Master Test Execution Dashboard</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 20px; background-color: #f5f5f5; }
                .container { max-width: 1200px; margin: 0 auto; background: white; padding: 20px; border-radius: 8px; }
                .header { text-align: center; color: #333; border-bottom: 2px solid #007bff; padding-bottom: 20px; }
                .framework-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin: 20px 0; }
                .framework-card { border: 1px solid #ddd; border-radius: 8px; padding: 20px; background: #f9f9f9; }
                .framework-header { font-size: 18px; font-weight: bold; color: #007bff; margin-bottom: 10px; }
                .status-pass { color: #28a745; font-weight: bold; }
                .status-fail { color: #dc3545; font-weight: bold; }
                .metrics { display: flex; justify-content: space-between; margin: 10px 0; }
                .metric { text-align: center; }
                .metric-value { font-size: 24px; font-weight: bold; color: #007bff; }
                .metric-label { font-size: 12px; color: #666; }
                .summary { background: #e9ecef; padding: 15px; border-radius: 5px; margin: 20px 0; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>üöÄ Master Automation Test Dashboard</h1>
                    <p>Comprehensive Test Execution Report - All Frameworks</p>
                    <p><strong>Execution Date:</strong> $(date)</p>
                    <p><strong>Environment:</strong> ${{ needs.setup.outputs.environment }}</p>
                    <p><strong>Test Suite:</strong> ${{ needs.setup.outputs.test-suite }}</p>
                </div>
                
                <div class="summary">
                    <h3>üìä Execution Summary</h3>
                    <div class="metrics">
                        <div class="metric">
                            <div class="metric-value">3</div>
                            <div class="metric-label">Frameworks</div>
                        </div>
                        <div class="metric">
                            <div class="metric-value">‚úÖ</div>
                            <div class="metric-label">Status</div>
                        </div>
                        <div class="metric">
                            <div class="metric-value">$(date +%H:%M)</div>
                            <div class="metric-label">Completed</div>
                        </div>
                    </div>
                </div>
                
                <div class="framework-grid">
                    <div class="framework-card">
                        <div class="framework-header">üåê Java Selenium Framework</div>
                        <p><strong>Type:</strong> Web Automation</p>
                        <p><strong>Technology:</strong> Java + Selenium WebDriver</p>
                        <p><strong>Target:</strong> SauceDemo Web Application</p>
                        <p><strong>Status:</strong> <span class="status-pass">‚úÖ Executed</span></p>
                        <p><a href="java-selenium/">üìã View Detailed Reports</a></p>
                    </div>
                    
                    <div class="framework-card">
                        <div class="framework-header">üì± Java Appium Framework</div>
                        <p><strong>Type:</strong> Mobile Automation</p>
                        <p><strong>Technology:</strong> Java + Appium</p>
                        <p><strong>Target:</strong> 4 Android Applications</p>
                        <p><strong>Status:</strong> <span class="status-pass">‚úÖ Executed</span></p>
                        <p><a href="java-appium/">üìã View Detailed Reports</a></p>
                    </div>
                    
                    <div class="framework-card">
                        <div class="framework-header">üêç Python Selenium Framework</div>
                        <p><strong>Type:</strong> Web Automation</p>
                        <p><strong>Technology:</strong> Python + Selenium</p>
                        <p><strong>Target:</strong> SauceDemo Web Application</p>
                        <p><strong>Status:</strong> <span class="status-pass">‚úÖ Executed</span></p>
                        <p><a href="python-selenium/">üìã View Detailed Reports</a></p>
                    </div>
                </div>
                
                <div class="summary">
                    <h3>üéØ Quality Metrics</h3>
                    <ul>
                        <li><strong>Code Coverage:</strong> Comprehensive across all frameworks</li>
                        <li><strong>Test Coverage:</strong> Web + Mobile + API testing</li>
                        <li><strong>Cross-Platform:</strong> Java + Python technologies</li>
                        <li><strong>CI/CD Integration:</strong> Jenkins + GitHub Actions + Docker</li>
                        <li><strong>Reporting:</strong> ExtentReports + Allure + HTML</li>
                    </ul>
                </div>
            </div>
        </body>
        </html>
        EOF
        
    - name: Deploy Consolidated Reports
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./consolidated-reports
        destination_dir: master-reports/${{ github.run_number }}
        
    - name: Master Notification
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#master-automation'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
        custom_payload: |
          {
            "text": "üöÄ Master Automation Pipeline Completed",
            "attachments": [
              {
                "color": "${{ job.status == 'success' && 'good' || 'danger' }}",
                "fields": [
                  {
                    "title": "Frameworks Executed",
                    "value": "Java Selenium: ${{ needs.setup.outputs.run-java-selenium }}\nJava Appium: ${{ needs.setup.outputs.run-java-appium }}\nPython Selenium: ${{ needs.setup.outputs.run-python-selenium }}",
                    "short": true
                  },
                  {
                    "title": "Test Suite",
                    "value": "${{ needs.setup.outputs.test-suite }}",
                    "short": true
                  },
                  {
                    "title": "Environment",
                    "value": "${{ needs.setup.outputs.environment }}",
                    "short": true
                  },
                  {
                    "title": "Reports",
                    "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Master Dashboard>",
                    "short": true
                  }
                ]
              }
            ]
          }
